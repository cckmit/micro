#basicserver:  port: 9090  servlet:    context-path: /micro#druidspring:  datasource:    username: geweixin    password: 198710
    url: jdbc:log4jdbc:mysql://localhost:3306/yoga?useUnicode=true&characterEncoding=utf-8&useAffectedRows=true&useSSL=false&serverTimezone=Asia/Shanghai
    driver-class-name: net.sf.log4jdbc.DriverSpy
    type:  com.alibaba.druid.pool.DruidDataSource
    name: micro
    initialSize: 6
    asyncInit: true
    maxActive: 64
    minIdle: 6
    maxWait: 60000
    useUnfairLock: true
    poolPreparedStatements: true
    maxOpenPreparedStatements: 100
    timeBetweenEvictionRunsMillis: 5000
    minEvictableIdleTimeMillis: 600000
    maxEvictableIdleTimeMillis: 900000
    validationQuery: SELECT 1
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false  application:    name: eureka-client-micro-service  redis:    client-name: micro    database: 0    host: localhostx    timeout: 10000    lettuce:      shutdown-timeout: 100      pool:        max-active: 6        max-idle: 3        max-wait: 200        min-idle: 3      #mybatismybatis:  mapper-locations: classpath:mybatis/*sqlMap.xml  type-aliases-package: micro.bean.po  configuration:     map-underscore-to-camel-case: true     #Croscros:  config:    pathPattern: /**    methods: '*'    origins: '*'    allowedHeaders: '*'    exposedHeaders:      - token      - content-disposition      #token token:     expires: 30#miniominio:  url: http://127.0.0.1  port: 9000  accessKey: minioadmin  secretKey: minioadmin  connectTimeout: 30  writeTimeout: 30  readTimeout: 30  eureka:  client:    register-with-eureka: true    fetch-registry: true    service-url:      defaultZone: http://localhost:8761/eureka/  instance:    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}    prefer-ip-address: true    #loglogging:  level:    micro.plugin.eureka: debug